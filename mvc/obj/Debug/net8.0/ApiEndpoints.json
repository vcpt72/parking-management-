[
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "GetApiDescription",
    "RelativePath": "api/description",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Object",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "Login",
    "RelativePath": "api/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Parking_projekt.Models.AppUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.AppUser",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "Logout",
    "RelativePath": "api/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "GetParkingLots",
    "RelativePath": "api/parkinglots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingLot",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "GetParkingLotById",
    "RelativePath": "api/parkinglots/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingLot",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "GetParkingStats",
    "RelativePath": "api/parkinglots/{id}/stats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "AddParkingSpot",
    "RelativePath": "api/parkinglots/{parkingLotId}/addspot",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parkingLotId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingSpot",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "RemoveParkingSpot",
    "RelativePath": "api/parkinglots/{parkingLotId}/removespot/{spotId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parkingLotId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "spotId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "SetParkingSpotToAvailable",
    "RelativePath": "api/parkinglots/{parkingLotId}/spot/{spotId}/available",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parkingLotId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "spotId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingSpot",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "SetParkingSpotToMaintenance",
    "RelativePath": "api/parkinglots/{parkingLotId}/spot/{spotId}/maintenance",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parkingLotId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "spotId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingSpot",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "GetParkingSpots",
    "RelativePath": "api/parkingspots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingSpot",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "GetParkingSpotHistory",
    "RelativePath": "api/parkingspots/{spotId}/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "spotId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Parking_projekt.Models.ParkingSpotHistory",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Parking_projekt.Controllers.ApiController",
    "Method": "Register",
    "RelativePath": "api/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newUser",
        "Type": "Parking_projekt.Models.AppUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]